generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = -1 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chat_messages {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  session_id      String        @db.Uuid
  user_id         String?       @db.VarChar(255)
  message         String
  message_type    message_type
  detected_intent String?       @db.VarChar(100)
  created_at      DateTime?     @default(now()) @db.Timestamp(6)
  chat_sessions   chat_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           users?        @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model chat_sessions {
  id             String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id        String?         @db.VarChar(255)
  current_url    String?
  current_domain String?         @db.VarChar(255)
  created_at     DateTime?       @default(now()) @db.Timestamp(6)
  last_activity  DateTime?       @default(now()) @db.Timestamp(6)
  chat_messages  chat_messages[]
  users          users?          @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model user_preferences {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String    @db.VarChar(255)
  preference_text String
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id               String             @id @db.VarChar(255)
  email            String             @unique @db.VarChar(255)
  first_name       String?            @db.VarChar(100)
  last_name        String?            @db.VarChar(100)
  is_active        Boolean?           @default(true)
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  updated_at       DateTime?          @default(now()) @db.Timestamp(6)
  wallet_address   String?            @unique(map: "users_wallet_address_unique") @db.VarChar(150)
  other_details    Json?
  chat_messages    chat_messages[]
  chat_sessions    chat_sessions[]
  user_preferences user_preferences[]
}

enum message_type {
  user
  assistant
  system
}
